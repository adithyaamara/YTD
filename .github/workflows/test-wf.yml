# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          IThinkThisWillFailThisStep
      # always step
      - name: cleanup environment
        if: always()
        run: |
          rm -rf ./*
          ls -alh
          echo ${{ job.status }} > status_build.txt
      - name: Upload file status_build.txt as an artifact
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: pass_status_build
          path: status_build.txt
  status:
    if: always()
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download artifact pass_status_build
        uses: actions/download-artifact@v1
        with:
          name: pass_status_build
      - name: Set the statuses of Job 01 as output for this step
        id: job_statuses
        run: |
          echo "::set-output name=status_build::$(<pass_status_build/status_build.txt)"
      - name: Show the values of the outputs
        run: |
          # using the syntax steps.<step_id>.outputs.<output_name> to access the output parameters
          echo "The Job 'Build' is ${{ steps.set_outputs.outputs.status_build }}"
          
